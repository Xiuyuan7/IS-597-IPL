{
    "id": "https://doi.org/10.5281/zenodo.274674",
    "type": "works",
    "attributes": {
        "doi": "10.5281/zenodo.274674",
        "identifier": "https://doi.org/10.5281/zenodo.274674",
        "url": "https://zenodo.org/record/274674",
        "author": [
            {
                "given": "Jay M.",
                "family": "Savage"
            },
            {
                "given": "Federico",
                "family": "Bola\u00f1os"
            }
        ],
        "title": "A checklist of the Amphibians and Reptiles of Costa Rica: Additions and nomenclatural revisions",
        "container-title": "Zenodo",
        "description": "Savage, Jay M., Bola\u00f1os, Federico (2009): A checklist of the Amphibians and Reptiles of Costa Rica: Additions and nomenclatural revisions. Zootaxa 2005: 1-23, DOI: 10.5281/zenodo.274674",
        "resource-type-subtype": "Journal article",
        "data-center-id": "cern.zenodo",
        "member-id": "cern",
        "resource-type-id": "text",
        "version": null,
        "license": "info:eu-repo/semantics/closedAccess",
        "schema-version": "4",
        "results": [],
        "related-identifiers": [],
        "published": "2009",
        "registered": "2017-02-08T13:58:31.000Z",
        "checked": null,
        "updated": "2019-08-02T13:52:47.000Z",
        "media": [],
        "xml": ""
    },
    "relationships": {
        "data-center": {
            "data": {
                "id": "cern.zenodo",
                "type": "data-centers"
            }
        },
        "member": {
            "data": {
                "id": "cern",
                "type": "members"
            }
        },
        "resource-type": {
            "data": {
                "id": "text",
                "type": "resource-types"
            }
        }
    }
}