{
    "id": "https://doi.org/10.5281/zenodo.189620",
    "type": "works",
    "attributes": {
        "doi": "10.5281/zenodo.189620",
        "identifier": "https://doi.org/10.5281/zenodo.189620",
        "url": "https://zenodo.org/record/189620",
        "author": [
            {
                "given": "Gabriele",
                "family": "Gentile"
            },
            {
                "given": "Howard",
                "family": "Snell"
            }
        ],
        "title": "Conolophus Marthae Sp. Nov. (Squamata, Iguanidae), A New Species Of Land Iguana From The Gal\u00e1pagos Archipelago",
        "container-title": "Zenodo",
        "description": "Gentile, Gabriele, Snell, Howard (2009): Conolophus marthae sp. nov. (Squamata, Iguanidae), a new species of land iguana from the Gal\u00e1pagos archipelago. Zootaxa 2201: 1-10, DOI: 10.5281/zenodo.189620",
        "resource-type-subtype": "Journal article",
        "data-center-id": "cern.zenodo",
        "member-id": "cern",
        "resource-type-id": "text",
        "version": null,
        "license": "info:eu-repo/semantics/closedAccess",
        "schema-version": "4",
        "results": [],
        "related-identifiers": [],
        "published": "2009",
        "registered": "2016-11-30T18:53:23.000Z",
        "checked": null,
        "updated": "2019-08-02T13:24:59.000Z",
        "media": [],
        "xml": ""
    },
    "relationships": {
        "data-center": {
            "data": {
                "id": "cern.zenodo",
                "type": "data-centers"
            }
        },
        "member": {
            "data": {
                "id": "cern",
                "type": "members"
            }
        },
        "resource-type": {
            "data": {
                "id": "text",
                "type": "resource-types"
            }
        }
    }
}